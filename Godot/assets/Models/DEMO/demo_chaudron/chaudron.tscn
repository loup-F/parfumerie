[gd_scene load_steps=21 format=3 uid="uid://cmb1xww1llovi"]

[ext_resource type="PackedScene" uid="uid://dxwev1kjycron" path="res://assets/Models/DEMO/demo_chaudron/chaudron.fbx" id="1_lcn27"]
[ext_resource type="Texture2D" uid="uid://bpngcu0rwfrgt" path="res://assets/Textures/hanse.jpg" id="2_fn88i"]
[ext_resource type="Texture2D" uid="uid://w77e0celfh11" path="res://assets/Textures/hanse_b.png" id="3_lldn2"]
[ext_resource type="Texture2D" uid="uid://ci4ppxd0fcsia" path="res://assets/Textures/chaudron.jpg" id="4_biym8"]
[ext_resource type="Texture2D" uid="uid://bg63cw5ityfmt" path="res://assets/Textures/chaudron_b.png" id="5_cgibi"]
[ext_resource type="Texture2D" uid="uid://bfdm3jjcknu0g" path="res://assets/Textures/terre.png" id="6_5p774"]
[ext_resource type="Texture2D" uid="uid://bin8wwogvjh7p" path="res://assets/Textures/terre_s.png" id="7_bi5o8"]
[ext_resource type="Texture2D" uid="uid://ocogequ8rurj" path="res://assets/Textures/terre_b.png" id="8_x5cvs"]

[sub_resource type="Shader" id="Shader_x4xrk"]
code = "shader_type spatial;

render_mode cull_front, unshaded, depth_draw_never;

global uniform vec4 outline_color;
global uniform float outline_width;

void vertex() {
	vec4 clip_position = 
			PROJECTION_MATRIX *
			(MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal =
			mat3(PROJECTION_MATRIX) *
			(mat3(MODELVIEW_MATRIX) * NORMAL);
	clip_position.xy +=
			normalize(clip_normal.xy) /
			VIEWPORT_SIZE *
			clip_position.w *
			outline_width;
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7uv3k"]
render_priority = 0
shader = SubResource("Shader_x4xrk")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_jfs0s"]
next_pass = SubResource("ShaderMaterial_7uv3k")
diffuse_mode = 3
albedo_texture = ExtResource("2_fn88i")
metallic = 1.0
emission = Color(0.341176, 0.235294, 0.352941, 1)
emission_energy_multiplier = 4.67
normal_enabled = true
normal_texture = ExtResource("3_lldn2")
rim = 0.31
heightmap_enabled = true
backlight = Color(0.890196, 0.737255, 0.72549, 1)
refraction_scale = 0.42

[sub_resource type="Shader" id="Shader_sxk47"]
code = "shader_type spatial;

render_mode cull_front, unshaded, depth_draw_never;

global uniform vec4 outline_color;
global uniform float outline_width;

void vertex() {
	vec4 clip_position = 
			PROJECTION_MATRIX *
			(MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal =
			mat3(PROJECTION_MATRIX) *
			(mat3(MODELVIEW_MATRIX) * NORMAL);
	clip_position.xy +=
			normalize(clip_normal.xy) /
			VIEWPORT_SIZE *
			clip_position.w *
			outline_width;
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_aofch"]
render_priority = 0
shader = SubResource("Shader_sxk47")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_dlbrm"]
next_pass = SubResource("ShaderMaterial_aofch")
diffuse_mode = 3
albedo_texture = ExtResource("2_fn88i")
metallic = 1.0
emission = Color(0.341176, 0.235294, 0.352941, 1)
emission_energy_multiplier = 4.67
normal_enabled = true
normal_texture = ExtResource("3_lldn2")
rim = 0.31
heightmap_enabled = true
backlight = Color(0.890196, 0.737255, 0.72549, 1)
refraction_scale = 0.42

[sub_resource type="Shader" id="Shader_v5mup"]
code = "shader_type spatial;

render_mode cull_front, unshaded, depth_draw_never;

global uniform vec4 outline_color;
global uniform float outline_width;

void vertex() {
	vec4 clip_position = 
			PROJECTION_MATRIX *
			(MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal =
			mat3(PROJECTION_MATRIX) *
			(mat3(MODELVIEW_MATRIX) * NORMAL);
	clip_position.xy +=
			normalize(clip_normal.xy) /
			VIEWPORT_SIZE *
			clip_position.w *
			outline_width;
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qog77"]
render_priority = 0
shader = SubResource("Shader_v5mup")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_uw44k"]
next_pass = SubResource("ShaderMaterial_qog77")
diffuse_mode = 3
albedo_color = Color(0.913725, 0.580392, 0.407843, 1)
albedo_texture = ExtResource("4_biym8")
metallic = 1.0
emission = Color(0.341176, 0.235294, 0.352941, 1)
emission_energy_multiplier = 4.67
normal_enabled = true
normal_texture = ExtResource("5_cgibi")
rim = 0.31
heightmap_enabled = true
backlight = Color(0.890196, 0.737255, 0.72549, 1)
refraction_scale = 0.42

[sub_resource type="Shader" id="Shader_dsuls"]
code = "shader_type spatial;

render_mode cull_front, unshaded, depth_draw_never;

global uniform vec4 outline_color;
global uniform float outline_width;

void vertex() {
	vec4 clip_position = 
			PROJECTION_MATRIX *
			(MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal =
			mat3(PROJECTION_MATRIX) *
			(mat3(MODELVIEW_MATRIX) * NORMAL);
	clip_position.xy +=
			normalize(clip_normal.xy) /
			VIEWPORT_SIZE *
			clip_position.w *
			outline_width;
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xnayo"]
render_priority = 0
shader = SubResource("Shader_dsuls")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_l34x2"]
next_pass = SubResource("ShaderMaterial_xnayo")
diffuse_mode = 3
albedo_texture = ExtResource("6_5p774")
metallic = 1.0
metallic_texture = ExtResource("7_bi5o8")
emission = Color(0.341176, 0.235294, 0.352941, 1)
emission_energy_multiplier = 4.67
normal_enabled = true
normal_texture = ExtResource("8_x5cvs")
rim = 0.31
heightmap_enabled = true
backlight = Color(0.890196, 0.737255, 0.72549, 1)
refraction_scale = 0.42

[node name="chaudron" instance=ExtResource("1_lcn27")]

[node name="hanse" parent="RootNode" index="0"]
surface_material_override/0 = SubResource("StandardMaterial3D_jfs0s")

[node name="hanse2" parent="RootNode" index="1"]
surface_material_override/0 = SubResource("StandardMaterial3D_dlbrm")

[node name="Chaudron" parent="RootNode" index="2"]
surface_material_override/0 = SubResource("StandardMaterial3D_uw44k")

[node name="socle" parent="RootNode" index="3"]
surface_material_override/0 = SubResource("StandardMaterial3D_l34x2")
