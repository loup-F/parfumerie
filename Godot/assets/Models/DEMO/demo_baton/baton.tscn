[gd_scene load_steps=8 format=3 uid="uid://ykamqi6uh6y3"]

[ext_resource type="PackedScene" uid="uid://p6hfpalap8dg" path="res://assets/Models/DEMO/demo_baton/baton.fbx" id="1_0ckt0"]
[ext_resource type="Texture2D" uid="uid://b4upx1ha50wp4" path="res://assets/Models/DEMO/demo_baton/baton.fbm/dark_wood.jpg" id="2_vgdvx"]
[ext_resource type="Texture2D" uid="uid://lq1uxgsho0ok" path="res://assets/Textures/dark_wood_s.png" id="3_ccunr"]
[ext_resource type="Texture2D" uid="uid://2dynd6i0305b" path="res://assets/Textures/dark_wood_b.png" id="4_vdmdd"]

[sub_resource type="Shader" id="Shader_bmq4c"]
code = "shader_type spatial;

render_mode cull_front, unshaded, depth_draw_never;

global uniform vec4 outline_color;
global uniform float outline_width;

void vertex() {
	vec4 clip_position = 
			PROJECTION_MATRIX *
			(MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal =
			mat3(PROJECTION_MATRIX) *
			(mat3(MODELVIEW_MATRIX) * NORMAL);
	clip_position.xy +=
			normalize(clip_normal.xy) /
			VIEWPORT_SIZE *
			clip_position.w *
			outline_width;
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5dl8l"]
render_priority = 0
shader = SubResource("Shader_bmq4c")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_n8yfu"]
next_pass = SubResource("ShaderMaterial_5dl8l")
diffuse_mode = 3
albedo_texture = ExtResource("2_vgdvx")
metallic = 1.0
metallic_texture = ExtResource("3_ccunr")
emission = Color(0.341176, 0.235294, 0.352941, 1)
emission_energy_multiplier = 4.67
normal_enabled = true
normal_texture = ExtResource("4_vdmdd")
rim = 0.31
heightmap_enabled = true
backlight = Color(0.890196, 0.737255, 0.72549, 1)
refraction_scale = 0.42

[node name="baton" instance=ExtResource("1_0ckt0")]

[node name="Baton" parent="RootNode" index="0"]
surface_material_override/0 = SubResource("StandardMaterial3D_n8yfu")
